# Regular Expression : 정규 (표현)식
# - 정규 표현식, regexp 또는 regex 등으로 불림
# - 복잡한 문자열 패턴을 정의하는 "문자 표현 공식"
# - 특정한 규칙을 가진 문자열의 집합을 추출


# Example
#               start digit number      end
# 010-0000-0000     ^\d{3}\-\d{4}\-\d{4}$
# 203.252.101.40    ^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$


# HTML Parsing using Regular Expression
# - 주민번호, 전화번호, 도서 ISBN 등 형식이있는 문자열을 원본 문자열로부터 추출
# - HTML 역시 tag를 사용한 일정한 형식이 존재하여 정규식으로 추출이 용이함
# - 하지만 문법은 매우 방대하여, 각 경우에 맞는 정규식을 스스로 찾아서 공부하는 것이 필요
# - 왠만한 필요한 것들은 구글 검색을 통해 찾을 수 있음
# - 기본적인 문법을 공부한 후 넓게 적용하는 것이 중요 


# Examples
#
# 이메일
# ^[a-zA-Z-9]+@[a-zA-Z-9]+$
# ^[_0-9a-zA-Z-]+@[0-9a-zA-Z-]+(.[_0-9a-zA-Z-]+)*$
#
# 휴대폰
# ^01(?:0|1|[6-9])-(?:\d{3}|\d{4})-\4{d}$
#
# 일반전화
# ^\d{2,3}-\d{3,4}-\d{4}$
#
# 주민번호
# \d{6}\-[1-4]\d{6}\
#
# IP주소
# ([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})
#
# 해쉬태그
# #([A-Za-z0-9가-횡_]+)




